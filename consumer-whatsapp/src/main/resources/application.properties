spring.application.name=demo
spring.threads.virtual.enabled=true

server.tomcat.threads.max=4
server.shutdown=graceful
# server.port=9010

# Producer
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.enable-idempotence=true

# Consumer
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.listener.type=single
spring.kafka.listener.ack-mode=record


kafka.consumerKafka.topics=topic-notif-whatsapp
kafka.consumerKafka.groupId=group-notif-whatsapp
kafka.consumerKafka.DLT=webhook-DLT


# Configuração básica de conexão com o banco de dados
spring.datasource.url=jdbc:postgresql://localhost:5432/cashhub
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Configurações específicas para o HikariCP (pool de conexões)
spring.datasource.hikari.pool-name=HikariCP
# Número máximo de conexões no pool
spring.datasource.hikari.maximum-pool-size=20
# Número mínimo de conexões inativas
spring.datasource.hikari.minimum-idle=2
# Tempo máximo de uma conexão ficar ociosa (milissegundos)
spring.datasource.hikari.idle-timeout=120000
# Tempo máximo para obter uma conexão do pool (milissegundos)
spring.datasource.hikari.connection-timeout=60000
# Tempo máximo de vida de uma conexão (milissegundos)
spring.datasource.hikari.max-lifetime=600000
# Tempo máximo para validar uma conexão do pool
spring.datasource.hikari.validation-timeout=3000
# Tempo para detectar vazamentos de conexão (milissegundos)
spring.datasource.hikari.leak-detection-threshold=15000
spring.datasource.hikari.keepalive-time=30000


# Configuração do pool de conexões de leitura e escrita, se necessário
#spring.datasource.hikari.read-only=true                 # Se o banco for de leitura somente
#spring.datasource.hikari.auto-commit=true               # Para controlar a transação automaticamente

# Configuração do log para monitorar a atividade do pool
#spring.datasource.hikari.metrics-tracker-class=com.zaxxer.hikari.metrics.prometheus.PrometheusMetricsTrackerFactory # Caso queira monitorar com Prometheus


# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

logging.level.com.zaxxer.hikari.HikariConfig=DEBUG